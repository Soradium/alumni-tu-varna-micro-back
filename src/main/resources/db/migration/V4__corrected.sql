-- Drop all dependent tables in the correct order due to foreign key constraints
DROP TABLE IF EXISTS alumni_group_membership;
DROP TABLE IF EXISTS company_records;
DROP TABLE IF EXISTS alumni_details;
DROP TABLE IF EXISTS alumni_groups;
DROP TABLE IF EXISTS alumni;
DROP TABLE IF EXISTS speciality;
DROP TABLE IF EXISTS degree;
DROP TABLE IF EXISTS faculty;

-- FACULTY
CREATE TABLE faculties (
    faculty_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    faculty_name VARCHAR(100) NOT NULL
);

-- DEGREE
CREATE TABLE degrees (
    degree_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    degree_name VARCHAR(100) NOT NULL
);

-- SPECIALITY
CREATE TABLE specialities (
    speciality_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    speciality_name VARCHAR(100) NOT NULL
);

-- ALUMNI
CREATE TABLE alumni (
    faculty_number INT PRIMARY KEY,
    facebook_url VARCHAR(300),
    linkedin_url VARCHAR(300),
    degree_id INT REFERENCES degrees(degree_id)
);
CREATE INDEX idx_alumni_degree_id ON alumni(degree_id);

-- ALUMNI DETAILS
CREATE TABLE alumni_details (
    faculty_number INT PRIMARY KEY REFERENCES alumni(faculty_number) ON DELETE CASCADE,
    full_name VARCHAR(255) NOT NULL,
    birth_date DATE,
    faculty_id INT REFERENCES faculties(faculty_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_details_faculty_id ON alumni_details(faculty_id);

-- COMPANY RECORDS
CREATE TABLE company_records (
    company_record_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    faculty_number INT NOT NULL REFERENCES alumni(faculty_number) ON DELETE CASCADE,
    enrollment_date DATE NOT NULL,
    discharge_date DATE,
    position_name VARCHAR(255) NOT NULL,
    company_name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CHECK (discharge_date IS NULL OR enrollment_date <= discharge_date)
);
CREATE INDEX idx_company_faculty_number ON company_records(faculty_number);

-- ALUMNI GROUPS
CREATE TABLE alumni_groups (
    groups_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    faculty_id INT REFERENCES faculties(faculty_id),
    group_number INT NOT NULL,
    graduation_year INT NOT NULL,
    speciality_id INT REFERENCES specialities(speciality_id)
);
CREATE INDEX idx_groups_faculty_id ON alumni_groups(faculty_id);

-- GROUP MEMBERSHIP
CREATE TABLE alumni_group_memberships (
    group_member_id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    faculty_number INT NOT NULL REFERENCES alumni(faculty_number) ON DELETE CASCADE,
    groups_id INT NOT NULL REFERENCES alumni_groups(groups_id) ON DELETE CASCADE,
    average_score FLOAT,
    UNIQUE(faculty_number, groups_id)
);
CREATE INDEX idx_membership_groups_id ON alumni_group_memberships(groups_id);

ALTER TABLE alumni
    DROP CONSTRAINT alumni_api_base_id_fkey;

ALTER TABLE alumni
    DROP CONSTRAINT alumni_degree_id_fkey;

ALTER TABLE alumni_details
    DROP CONSTRAINT alumni_details_alumni_id_fkey;

ALTER TABLE alumni_group_membership
    DROP CONSTRAINT alumni_group_membership_alumni_id_fkey;

ALTER TABLE alumni_group_membership
    DROP CONSTRAINT alumni_group_membership_group_id_fkey;

ALTER TABLE alumni_groups
    DROP CONSTRAINT alumni_groups_speciality_id_fkey;

ALTER TABLE company_records
    DROP CONSTRAINT company_records_alumni_id_fkey;

CREATE SEQUENCE IF NOT EXISTS MyEntity_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE MyEntity
(
    id    BIGINT NOT NULL,
    field VARCHAR(255),
    CONSTRAINT pk_myentity PRIMARY KEY (id)
);

CREATE TABLE degrees
(
    degree_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    degree    VARCHAR(100)                             NOT NULL,
    CONSTRAINT pk_degrees PRIMARY KEY (degree_id)
);

CREATE TABLE specialities
(
    speciality_id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    speciality_name VARCHAR(100)                             NOT NULL,
    speciality      VARCHAR(100)                             NOT NULL,
    CONSTRAINT pk_specialities PRIMARY KEY (speciality_id)
);

ALTER TABLE company_records
    ADD company VARCHAR(255);

ALTER TABLE company_records
    ADD company_record_id INTEGER GENERATED BY DEFAULT AS IDENTITY;

ALTER TABLE company_records
    ADD created_at TIMESTAMP WITHOUT TIME ZONE;

ALTER TABLE company_records
    ADD enrollmentDate date;

ALTER TABLE company_records
    ADD faculty_number INTEGER;

ALTER TABLE company_records
    ALTER COLUMN company SET NOT NULL;

ALTER TABLE alumni_details
    ADD created_at TIMESTAMP WITHOUT TIME ZONE;

ALTER TABLE alumni_details
    ADD facultyNumber INTEGER;

ALTER TABLE alumni_details
    ADD fullName VARCHAR(255);

ALTER TABLE alumni_details
    ADD updated_at TIMESTAMP WITHOUT TIME ZONE;

ALTER TABLE company_records
    ALTER COLUMN enrollmentDate SET NOT NULL;

ALTER TABLE alumni
    ADD facebook_url VARCHAR(255);

ALTER TABLE alumni
    ADD faculty_number INTEGER;

ALTER TABLE alumni
    ADD linkedin_url VARCHAR(255);

ALTER TABLE Faculty
    ADD facultyName VARCHAR(100);

ALTER TABLE Faculty
    ALTER COLUMN facultyName SET NOT NULL;

ALTER TABLE alumni_details
    ALTER COLUMN facultyNumber SET NOT NULL;

ALTER TABLE alumni_group_membership
    ADD faculty_number INTEGER;

ALTER TABLE alumni_group_membership
    ADD group_member_id INTEGER GENERATED BY DEFAULT AS IDENTITY;

ALTER TABLE alumni_group_membership
    ADD groups_id INTEGER;

ALTER TABLE alumni_group_membership
    ALTER COLUMN faculty_number SET NOT NULL;

ALTER TABLE alumni_details
    ALTER COLUMN fullName SET NOT NULL;

ALTER TABLE alumni_groups
    ADD graduationYear INTEGER;

ALTER TABLE alumni_groups
    ADD groupNumber INTEGER;

ALTER TABLE alumni_groups
    ADD groups_id INTEGER GENERATED BY DEFAULT AS IDENTITY;

ALTER TABLE alumni_groups
    ALTER COLUMN graduationYear SET NOT NULL;

ALTER TABLE alumni_groups
    ALTER COLUMN groupNumber SET NOT NULL;

ALTER TABLE alumni_group_membership
    ALTER COLUMN groups_id SET NOT NULL;

ALTER TABLE alumni_groups
    ADD CONSTRAINT FK_ALUMNI_GROUPS_ON_SPECIALITY FOREIGN KEY (speciality_id) REFERENCES specialities (speciality_id);

ALTER TABLE alumni_group_membership
    ADD CONSTRAINT FK_ALUMNI_GROUP_MEMBERSHIP_ON_FACULTY_NUMBER FOREIGN KEY (faculty_number) REFERENCES alumni (faculty_number);

ALTER TABLE alumni_group_membership
    ADD CONSTRAINT FK_ALUMNI_GROUP_MEMBERSHIP_ON_GROUPS FOREIGN KEY (groups_id) REFERENCES alumni_groups (groups_id);

ALTER TABLE alumni
    ADD CONSTRAINT FK_ALUMNI_ON_DEGREE FOREIGN KEY (degree_id) REFERENCES degrees (degree_id);

ALTER TABLE company_records
    ADD CONSTRAINT FK_COMPANY_RECORDS_ON_FACULTY_NUMBER FOREIGN KEY (faculty_number) REFERENCES alumni (faculty_number);

DROP TABLE api_base CASCADE;

DROP TABLE degree CASCADE;

DROP TABLE speciality CASCADE;

ALTER TABLE alumni_details
    DROP CONSTRAINT alumni_details_pkey;

ALTER TABLE alumni
    DROP COLUMN id;

ALTER TABLE alumni
    DROP COLUMN api_base_id;

ALTER TABLE alumni_group_membership
    DROP COLUMN id;

ALTER TABLE alumni_group_membership
    DROP COLUMN alumni_id;

ALTER TABLE alumni_group_membership
    DROP COLUMN group_id;

ALTER TABLE alumni_groups
    DROP COLUMN id;

ALTER TABLE alumni_groups
    DROP COLUMN graduation_year;

ALTER TABLE alumni_groups
    DROP COLUMN group_number;

ALTER TABLE company_records
    DROP COLUMN id;

ALTER TABLE company_records
    DROP COLUMN alumni_id;

ALTER TABLE company_records
    DROP COLUMN company_name;

ALTER TABLE company_records
    DROP COLUMN enrollment_date;

ALTER TABLE alumni_details
    DROP COLUMN alumni_id;

ALTER TABLE alumni_details
    DROP COLUMN faculty_number;

ALTER TABLE alumni_details
    DROP COLUMN full_name;

ALTER TABLE faculty
    DROP COLUMN faculty_name;

ALTER TABLE alumni
    ADD CONSTRAINT pk_alumni PRIMARY KEY (faculty_number);

ALTER TABLE alumni_group_membership
    ADD CONSTRAINT pk_alumni_group_membership PRIMARY KEY (group_member_id);

ALTER TABLE alumni_groups
    ADD CONSTRAINT pk_alumni_groups PRIMARY KEY (groups_id);

ALTER TABLE company_records
    ADD CONSTRAINT pk_company_records PRIMARY KEY (company_record_id);